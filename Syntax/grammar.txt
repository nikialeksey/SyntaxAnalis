//version grammar for http://www.bottlecaps.de/rr/ui
main_program ::= (description_var | description_function) *
description_var ::= 'data_type' enum_var ';'
enum_var ::= head_var (',' head_var)*
head_var ::= name_var ('=' expression | )

description_function ::= 'data_type' head_function body_function
head_function ::= name_var '(' enum_var_func ')'
enum_var_func ::= param (',' param)*
param ::= 'data_type' name_var

call_function ::= name_var '(' enum_operand ')'
enum_operand ::= expression (',' expression)* | e

body_function ::= '{' enum_operator '}'
enum_operator ::= (operator | description_var)*
operator ::= body_function | expression ';' | 'do' operator 'while' '(' expression ')' ';' | 'return' expression ';' | ';'

expression ::= A2 (('=' | '+=' | '-=' | '*=' | '/=' | '%=') A2 )*
A2 ::= А3 ( ('==' | '!=') A3)*
A3 ::= А4 (('>' | '<' | '<=' | '>=') A4)*
A4 ::= А5 (('+' | '-') A5)*
A5 ::= А6 (('*' | '\' | '%') A6)*
A6 ::= ('-' | '+' | '--' | '++') A7| A7 ('--'|'++'|)
A7 ::= '(' expression ')' | operand | call_function



//finally grammar version
main_program ::= 'data_type' 'identifier' description main_program | 'data_type' 'identifier' description

description ::= descriptionF | descriptionV | ';'
descriptionV ::= '=' expression EV  ';' | EV  ';' | '=' expression ';' 
descriptionF ::= '(' ')' body_function | '(' PEVF ')' body_function

EV ::= ',' 'identifier' EV | ',' 'identifier' '=' expression EV | ',' 'identifier' | ',' 'identifier' '=' expression

PEVF ::= param | param EVF
EVF ::= ',' param EVF | ',' param
param ::= 'data_type' 'identifier'

body_function ::= '{' '}' | '{' enum_operator '}' 
enum_operator ::= O enum_operator | O

O ::= operator | 'data_type' 'identifier' descriptionV | 'data_type' 'identifier' ';' 

operator ::= body_function | expression ';' | 'do' operator 'while' '(' expression ')' ';' | 'return' expression ';' | ';'

expression ::= A2 '=' expression | A2 '+=' expression | A2 '-=' expression | A2 '*=' expression | A2 '/=' expression | A2 '%=' expression | A2
A2 ::= A2 '==' A3 | A2 '!=' A3 | A3
A3 ::= A3 '>' A4 | A3 '<' A4 | A3 '<=' A4 | A3 '>=' A4 | A4
A4 ::= A4 '+' A5 | A4 '-' A5 | A5
A5 ::= A5 '*' A6 | A5 '/' A6 | A5 '%' A6 | A6
A6 ::= '-' A7 | '+' A7 | '--' A7 | '++' A7 | A7 '--' | A7 '++' | A7
A7 ::= '(' expression ')' | 'identifier' | 'decimal' | 'hex' | 'identifier' '(' ')'